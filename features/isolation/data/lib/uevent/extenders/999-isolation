#!/bin/sh

. /.initrd/initenv

[ "${RDMODE-}" = 'live' ] && [ -n "${RDCONTAINER-}" ] ||
	exit 0

. shell-git-config-env
. uevent-sh-functions

configdir=/etc/isolate

mountfs()
{
	local eof fsdev fsdir dummy
	eof=
	while [ -z "$eof" ]; do
		read fsdev fsdir dummy ||
			eof=1

		[ -n "$fsdev" ] ||
			continue

		if [ -n "${ROOTONLY-}" ]; then
			[ "$fsdir" = "$rootmnt" ] ||
				continue
		fi

		[ "$fsdir" = "$rootdir" ] || [ -z "${fsdir##$rootdir/*}" ] ||
			continue

		if [ ! -d "$fsdir" ]; then
			message "$fsdir: Does not exist"
			return 1
		fi

		if ! mountpoint -q "$fsdir"; then
			message "$fsdir: Not mounted"
			return 1
		fi
	done < /etc/fstab
}

lockdir=/var/tmp
get_subsections_handler()
{
	local rootdir= name="$1"

	[ ! -f "$lockdir/$name/pid" ] &&
		[ ! -e "$filterdir/isolation.$name" ] &&
		[ ! -e "$eventdir/isolation.$name" ] ||
		return 0

	get_var rootdir "isolate" "$name" "root-dir"
	[ -n "$rootdir" ] ||
		return 0

	if [ -n "${ROOTONLY-}" ]; then
		[ "$rootdir" = "$rootmnt" ] ||
			return 0
	fi

	[ -n "$rootdir" ] && mountfs ||
		return 0

	event="$(make_event)"
	echo "NAME='$name'" > "$event"
	publish_event "isolation.$name" "$event"
}

git_config_env "$configdir/config.ini"
get_var lockdir "global" "" "lock-dir"
get_subsections "isolate"
